package com.abhiram.malwareremover.remover.impl.malware;

import com.abhiram.malwareremover.model.PluginFile;
import com.abhiram.malwareremover.remover.IRemover;
import com.abhiram.malwareremover.util.EncodeUtil;
import com.abhiram.malwareremover.util.JarUtil;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.tree.*;

import java.io.File;
import java.nio.file.Paths;
import java.util.LinkedList;
import java.util.List;

public class BodyMalwareRemover implements IRemover {
    private final List<String> blacklist = new LinkedList<>();


    public  BodyMalwareRemover(){

        // Setup the list with blacklisted stuff
        this.blacklist.add("https://bodyalhoha.com/bungee.jar");
        this.blacklist.add("plugins/PluginMetrics/bungee.jar");
    }

    @Override
    public void check(PluginFile plugin) {
        List<String> toRemove = new LinkedList<>();

        for(ClassNode node : plugin.getNodes()){
            for(MethodNode methods : node.methods){
                for(AbstractInsnNode insnNode : methods.instructions){
                    if(insnNode instanceof LdcInsnNode){
                        LdcInsnNode ldcInsnNode = (LdcInsnNode) insnNode;
                        if(!(ldcInsnNode.cst instanceof String)){
                            continue;
                        }

                        String value = (String) ldcInsnNode.cst;

                        if(blacklist.contains(value)){
                            // First check failed. its the infected with body backdoor
                            System.out.println("[BodyMalwareRemover] Body Backdoor Found removing....");
                            this.remove(plugin);
                            return;
                        }
                        String result = EncodeUtil.decodeBase64(value);

                        if(result != null){
                            if(this.blacklist.contains(result)){
                                // Second check
                                // This plugin is infected with body malware
                                System.out.println("[BodyMalwareRemover] Body Backdoor Found removing....");
                                this.remove(plugin);
                            }
                        }
                    }
                }
            }
        }
    }

    @Override
    public void remove(PluginFile plugin) {
        plugin.getNodes().removeIf(node -> node.name.contains("net/md5/bungee/api"));

        for(ClassNode classNode : plugin.getNodes()){
            for(MethodNode methodNode : classNode.methods){
                if(methodNode.name.contains("onEnable")){
                    for(AbstractInsnNode insnNode : methodNode.instructions){
                        if(insnNode.getOpcode() == Opcodes.INVOKESTATIC){
                            MethodInsnNode target = (MethodInsnNode) insnNode;
                            if(target.owner.contains("net/md5/bungee/api/BungeeAPI")){
                                // His injector found!
                                methodNode.instructions.remove(target);
                            }
                        }
                    }
                }
            }
        }

        // Save the clean plugin!
        JarUtil.save(new File("result/" + plugin.getPlugin().getName() + "-removed.jar"),plugin,true);
    }
}
